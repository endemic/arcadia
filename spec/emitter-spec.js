describe('Arcadia.Emitter', function () {
    // var factory = function
    beforeEach(function () {
        this.factory = function () {
            return new Arcadia.Shape();
        };
        this.emitter = new Arcadia.Emitter(this.factory);
    });

    afterEach(function () {
        this.emitter = null;
    });

    it('requires a factory function', function () {
        var self = this;
        expect(function () {
            new Arcadia.Emitter();
        }).toThrow();

        expect(function () {
            new Arcadia.Emitter(self.factory);
        }).not.toThrow();
    });

    it('creates particles', function () {
        var particles = new Arcadia.Emitter(this.factory, 100);
        expect(particles.children.inactive.length).toBe(100);
    });

    it('tries to reset particles when activating', function () {
        var factory,
            particle,
            particles;

        factory = function () {
            var shape = new Arcadia.Shape();
            shape.reset = function () {
                this.shape = 'circle';
            };
            return shape;
        };

        particles = new Arcadia.Emitter(factory);
        particle = particles.children.inactive[0];
        spyOn(particle, 'reset');
        particles.startAt(0, 0);
        expect(particle.reset).toHaveBeenCalled();
    });
});

// ---
// generated by coffee-script 1.9.2
